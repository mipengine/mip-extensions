(window.MIP = window.MIP || []).push({
	name: "mip-da-script",
	func: function() {
		define("mip-da-script/mip-da-script", ["require", "zepto", "customElement", "util"], function(t) {
			var e = t("zepto"),
				i = t("customElement").create(),
				n = t("util"),
				r = n.Gesture;
			if (window.includeJS = function(t, e) {
				if (null != e && !document.getElementById(t)) {
					var i = document.getElementsByTagName("HEAD").item(0),
						n = document.createElement("script");
					n.language = "javascript", n.type = "text/javascript", n.id = t;
					try {
						n.appendChild(document.createTextNode(e))
					} catch (t) {
						n.text = e
					}
					i.appendChild(n)
				}
			}, i.prototype.build = function() {
				var t = e(this.element),
					i = t.attr("geval-pre") || e("#mip-da-script-params").attr("geval-pre"),
					n = t.attr("geval") || e("#mip-da-script-params").attr("geval"),
					r = t.attr("loadjs") || e("#mip-da-script-params").attr("loadjs"),
					o = t.attr("loadjs-end") || e("#mip-da-script-params").attr("loadjs-end"),
					s = t.attr("adtag") || e("#mip-da-script-params").attr("adtag");
				s = s ? "false" === s || "0" === s ? !1 : s : !0;
				var a = "";
				if (i) window.mipDpGevalPre = i, a += '<script>includeJS("mip-dp-gevalpre",mipDpGevalPre)<\/script>';
				if (r) {
					var l = r.split("\n");
					e.each(l, function(t, i) {
						if (i = e.trim(i)) a += '<script src="' + i + '"><\/script>'
					})
				}
				if (n) window.mipDpGeval = n, a += '<script>includeJS("mip-dp-geval",mipDpGeval)<\/script>';
				if (s) {
					e.each(e(".adwraper").not("loaded"), function(t, i) {
						var n = e.trim(e(i).attr("id"));
						var zyb = n.substring(n.indexOf("_")+1)
						if (n) a += '<div id="' + n + '_temp" style="display:none;"><script type="text/javascript" src="http://hfm.adsame.com/s?z=hfm&c='+zyb+'" charset="gbk" ></script><script>("' + n + '");', a += '$("#' + n + '").append($("#' + n + '_temp").children().not("script"));', a += "<\/script></div>";
						e(i).addClass("loaded")
					});
					
				}
				
				if (a) document.write(a)
			}, "function" != typeof e.fn.swipeLeft) e.fn.swipeLeft = function(t) {
				if (0 !== this.length) e.each(this, function(e, i) {
					new r(i).on("swipeleft", t)
				})
			};
			if ("function" != typeof e.fn.swipeRight) e.fn.swipeRight = function(t) {
				if (0 !== this.length) e.each(this, function(e, i) {
					new r(i).on("swipeleft swiperight", function(e, i) {
						if ("swiperight" === i.type) t()
					})
				})
			};
			if ("function" != typeof e.fn.swipeUp) e.fn.swipeUp = function(t) {
				if (0 !== this.length) e.each(this, function(e, i) {
					new r(i).on("swipeup", t)
				})
			};
			if ("function" != typeof e.fn.swipeDown) e.fn.swipeDown = function(t) {
				if (0 !== this.length) e.each(this, function(e, i) {
					new r(i).on("swipedown", t)
				})
			};
			if ("function" != typeof e.fn.tap) e.fn.tap = function(t) {
				if (0 !== this.length) e.each(this, function(e, i) {
					new r(i).on("tap", t)
				})
			};
			return e(".btn-back").on("click", function() {
				window.history.back()
			}), i
		}), define("mip-da-script", ["mip-da-script/mip-da-script"], function(t) {
			return t
		}), function() {
			function t(t, e) {
				t.registerMipElement("mip-da-script", e)
			}
			if (window.MIP) require(["mip-da-script"], function(e) {
				t(window.MIP, e)
			});
			else require(["mip", "mip-da-script"], t)
		}()
	}
});
